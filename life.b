#!/usr/bin/bf
>++++[-<++++>]<[>
# получаем 16 и начинаем цикл
  >>++++++[<++++++++>-]>>>+<<<,
  # получаем 48 и вводим символ
  <[>[-<]>]>>[-<<]<[->+>>>+<<<<]>[-<+>]<
  # вычитаем из символа 48 до нуля и доублируем результат
  <[-]<++++[->++++<]>>>>>[-]+<<<
  # записываем 16 и один
  <[>[-<]>]>>[-<<]<
  # вычитаем 16 до нуля из первой копии
  <[-]+>>>>[-]<<<
  # удаляем все лишнее
  [>>>>[-]<<<<[->+>>>+<<<<]>[-<+>]<
  # если была введена буква то удаляем копию и заново дублируем
    >>>+<<<<+++++[>[-<]>]>>[-<<]<
    # вычитаем 6 до нуля
  <[-]+>[>>>>[-]<<<<<->[-]]<[>>>>>+++++++++<<<<<-]>]
  # если результат больше 0 то обнуляем копию иначе прибавим 9 к копии
  <[+++++++++>>>>>[-<+<<<+>>>>]<[->+<]+<<<
  # если была введена цифра то записываем 10 восстанавливаем цифру и ставим 1
    <[>[-<]>]>>[-<<]<
    # вычитаем 10 до нуля
  [>>>>[-]<<<<[-]]<[-]]
  # если результат больше 0 то обнуляем копию
  >>>>[-]>
  # удаляем все лишенее
  <<<<<<<[->+>>>>>+<<<<<<]>>>>>>[>[->+<]<[->+<]+>-]<[-<]<<<<[-<+>]<-
  # сдвигаем результаты
].

# вывод hex to bin
>>>+++++++++++<<<
# вводим 11 например
++++[-[>+>+<<-]>>[-<<+>>]+<[>[>>++<<-]>>[<<+>>-]<<<-]
# устанавливаем на 4 bin числа потом дублируем потом возводим в степень
>->[->+>>>+<<<<]>[-<+>]>>+<<<
# дублируем исходное число и устанавливаем 1
<[>[-<]>]>>[-<<]<<[-]+>
# вычитаем степень до нуля и ставим 1 для условия
[->>>->[-]<<<<[->>>>+<<<<]<++++[>+++++++<-]>.[-]] # 1
# нужный бит установлен значит сохраним результат вычитания и выведем символ
<[++++[>+++++++++<-]>.[-]<] # 0
# бит не установлен значит выведем другой символ
>>>>>[<<<<+>>>>-]<<<<<<<]
# сдвигаем результат вычитания на место

